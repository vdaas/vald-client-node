name: Update version
on:
  schedule:
    - cron: '0 * * * *'

jobs:
  update-version:
    name: update-version
    runs-on: ubuntu-latest
    steps:
      - name: Check out code.
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
      - name: Get client version
        run: |
          CURRENT_VERSION=`make vald/client/node/version/print`
          PKG_VERSION=`npm show vald-client-node version`

          if [ "$CURRENT_VERSION" != "${PKG_VERSION}" ];then
            echo "wait for updated"
            exit 0
          fi
      - name: update exmple client package
        working-directory: example
        run: |
          EXAMPLE_PKG_VERSION=`npm list --depth=0 vald-client-node | awk '{print $2}' | grep '@' | awk '{print $2}'`

          if [ "${PKG_VERSION}" = "${EXAMPLE_PKG_VERSION}" ]; then
            echo "noting to do"
            exit 0
          fi

          npm install -s vald-client-node@${PKG_VERSION}
          npm update
          npm outdated
      - name: update exmple-ts client package
        working-directory: example-ts
        run: |
          EXAMPLETS_PKG_VERSION=`npm list --depth=0 vald-client-node | awk '{print $2}' | grep '@' | awk '{print $2}'`

          if [ "${PKG_VERSION}" = "${EXAMPLETS_PKG_VERSION}" ]; then
            echo "nothing to do"
            exit 0
          fi

          npm install -s vald-client-node@${PKG_VERSION}
          npm update
          npm outdated
      - name: Check Changes public
        id: git_diff_preview
        run: |
          diff=`git diff example example-ts`
          if [ ! -z "$diff" ] ; then \
            echo "::set-output name=diff::true"
          fi
      - name: commit update
        if: steps.git_diff_preview.outputs.diff
        run: |
          git config --global user.name "VDaaS org"
          git config --global user.email "ci@vdaas.org"
          git remote set-url origin "https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"

          git checkout master
          git add example/ example-ts/
          git commit --signoff -m ":arrow_up: update client version ${VERSION}"

          git remote set-url origin "https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"

          git push origin master
        env:
          GITHUB_USER: ${{ secrets.VALDCLI_USER }}
          GITHUB_TOKEN: ${{ secrets.VALDCLI_TOKEN }}
