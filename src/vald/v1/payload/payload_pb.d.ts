/* eslint-disable */
// @generated by protobuf-ts 2.9.3 with parameter add_pb_suffix,client_grpc1,generate_dependencies,keep_enum_prefix,ts_nocheck,use_proto_field_name,output_javascript,output_legacy_commonjs,eslint_disable
// @generated from protobuf file "vald/v1/payload/payload.proto" (package "payload.v1", syntax proto3)
// tslint:disable
// @ts-nocheck
//
//
// Copyright (C) 2019-2024 vdaas.org vald team <vald@vdaas.org>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// You may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Status } from "../../../google/rpc/status_pb";
/**
 * Search related messages.
 *
 * @generated from protobuf message payload.v1.Search
 */
export interface Search {
}
/**
 * Represent a search request.
 *
 * @generated from protobuf message payload.v1.Search.Request
 */
export interface Search_Request {
    /**
     * The vector to be searched.
     *
     * @generated from protobuf field: repeated float vector = 1;
     */
    vector: number[];
    /**
     * The configuration of the search request.
     *
     * @generated from protobuf field: payload.v1.Search.Config config = 2;
     */
    config?: Search_Config;
}
/**
 * Represent the multiple search request.
 *
 * @generated from protobuf message payload.v1.Search.MultiRequest
 */
export interface Search_MultiRequest {
    /**
     * Represent the multiple search request content.
     *
     * @generated from protobuf field: repeated payload.v1.Search.Request requests = 1;
     */
    requests: Search_Request[];
}
/**
 * Represent a search by ID request.
 *
 * @generated from protobuf message payload.v1.Search.IDRequest
 */
export interface Search_IDRequest {
    /**
     * The vector ID to be searched.
     *
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * The configuration of the search request.
     *
     * @generated from protobuf field: payload.v1.Search.Config config = 2;
     */
    config?: Search_Config;
}
/**
 * Represent the multiple search by ID request.
 *
 * @generated from protobuf message payload.v1.Search.MultiIDRequest
 */
export interface Search_MultiIDRequest {
    /**
     * Represent the multiple search by ID request content.
     *
     * @generated from protobuf field: repeated payload.v1.Search.IDRequest requests = 1;
     */
    requests: Search_IDRequest[];
}
/**
 * Represent a search by binary object request.
 *
 * @generated from protobuf message payload.v1.Search.ObjectRequest
 */
export interface Search_ObjectRequest {
    /**
     * The binary object to be searched.
     *
     * @generated from protobuf field: bytes object = 1;
     */
    object: Uint8Array;
    /**
     * The configuration of the search request.
     *
     * @generated from protobuf field: payload.v1.Search.Config config = 2;
     */
    config?: Search_Config;
    /**
     * Filter configuration.
     *
     * @generated from protobuf field: payload.v1.Filter.Target vectorizer = 3;
     */
    vectorizer?: Filter_Target;
}
/**
 * Represent the multiple search by binary object request.
 *
 * @generated from protobuf message payload.v1.Search.MultiObjectRequest
 */
export interface Search_MultiObjectRequest {
    /**
     * Represent the multiple search by binary object request content.
     *
     * @generated from protobuf field: repeated payload.v1.Search.ObjectRequest requests = 1;
     */
    requests: Search_ObjectRequest[];
}
/**
 * Represent search configuration.
 *
 * @generated from protobuf message payload.v1.Search.Config
 */
export interface Search_Config {
    /**
     * Unique request ID.
     *
     * @generated from protobuf field: string request_id = 1;
     */
    request_id: string;
    /**
     * Maximum number of result to be returned.
     *
     * @generated from protobuf field: uint32 num = 2;
     */
    num: number;
    /**
     * Search radius.
     *
     * @generated from protobuf field: float radius = 3;
     */
    radius: number;
    /**
     * Search coefficient.
     *
     * @generated from protobuf field: float epsilon = 4;
     */
    epsilon: number;
    /**
     * Search timeout in nanoseconds.
     *
     * @generated from protobuf field: int64 timeout = 5;
     */
    timeout: bigint;
    /**
     * Ingress filter configurations.
     *
     * @generated from protobuf field: payload.v1.Filter.Config ingress_filters = 6;
     */
    ingress_filters?: Filter_Config;
    /**
     * Egress filter configurations.
     *
     * @generated from protobuf field: payload.v1.Filter.Config egress_filters = 7;
     */
    egress_filters?: Filter_Config;
    /**
     * Minimum number of result to be returned.
     *
     * @generated from protobuf field: uint32 min_num = 8;
     */
    min_num: number;
    /**
     * Aggregation Algorithm
     *
     * @generated from protobuf field: payload.v1.Search.AggregationAlgorithm aggregation_algorithm = 9;
     */
    aggregation_algorithm: Search_AggregationAlgorithm;
}
/**
 * Represent a search response.
 *
 * @generated from protobuf message payload.v1.Search.Response
 */
export interface Search_Response {
    /**
     * The unique request ID.
     *
     * @generated from protobuf field: string request_id = 1;
     */
    request_id: string;
    /**
     * Search results.
     *
     * @generated from protobuf field: repeated payload.v1.Object.Distance results = 2;
     */
    results: Object_Distance[];
}
/**
 * Represent multiple search responses.
 *
 * @generated from protobuf message payload.v1.Search.Responses
 */
export interface Search_Responses {
    /**
     * Represent the multiple search response content.
     *
     * @generated from protobuf field: repeated payload.v1.Search.Response responses = 1;
     */
    responses: Search_Response[];
}
/**
 * Represent stream search response.
 *
 * @generated from protobuf message payload.v1.Search.StreamResponse
 */
export interface Search_StreamResponse {
    /**
     * @generated from protobuf oneof: payload
     */
    payload: {
        oneofKind: "response";
        /**
         * Represent the search response.
         *
         * @generated from protobuf field: payload.v1.Search.Response response = 1;
         */
        response: Search_Response;
    } | {
        oneofKind: "status";
        /**
         * The RPC error status.
         *
         * @generated from protobuf field: google.rpc.Status status = 2;
         */
        status: Status;
    } | {
        oneofKind: undefined;
    };
}
/**
 * AggregationAlgorithm is enum of each aggregation algorithms
 *
 * @generated from protobuf enum payload.v1.Search.AggregationAlgorithm
 */
export declare enum Search_AggregationAlgorithm {
    /**
     * @generated from protobuf enum value: Unknown = 0;
     */
    Unknown = 0,
    /**
     * @generated from protobuf enum value: ConcurrentQueue = 1;
     */
    ConcurrentQueue = 1,
    /**
     * @generated from protobuf enum value: SortSlice = 2;
     */
    SortSlice = 2,
    /**
     * @generated from protobuf enum value: SortPoolSlice = 3;
     */
    SortPoolSlice = 3,
    /**
     * @generated from protobuf enum value: PairingHeap = 4;
     */
    PairingHeap = 4
}
/**
 * Filter related messages.
 *
 * @generated from protobuf message payload.v1.Filter
 */
export interface Filter {
}
/**
 * Represent the target filter server.
 *
 * @generated from protobuf message payload.v1.Filter.Target
 */
export interface Filter_Target {
    /**
     * The target hostname.
     *
     * @generated from protobuf field: string host = 1;
     */
    host: string;
    /**
     * The target port.
     *
     * @generated from protobuf field: uint32 port = 2;
     */
    port: number;
}
/**
 * Represent filter configuration.
 *
 * @generated from protobuf message payload.v1.Filter.Config
 */
export interface Filter_Config {
    /**
     * Represent the filter target configuration.
     *
     * @generated from protobuf field: repeated payload.v1.Filter.Target targets = 1;
     */
    targets: Filter_Target[];
}
/**
 * Insert related messages.
 *
 * @generated from protobuf message payload.v1.Insert
 */
export interface Insert {
}
/**
 * Represent the insert request.
 *
 * @generated from protobuf message payload.v1.Insert.Request
 */
export interface Insert_Request {
    /**
     * The vector to be inserted.
     *
     * @generated from protobuf field: payload.v1.Object.Vector vector = 1;
     */
    vector?: Object_Vector;
    /**
     * The configuration of the insert request.
     *
     * @generated from protobuf field: payload.v1.Insert.Config config = 2;
     */
    config?: Insert_Config;
}
/**
 * Represent the multiple insert request.
 *
 * @generated from protobuf message payload.v1.Insert.MultiRequest
 */
export interface Insert_MultiRequest {
    /**
     * Represent multiple insert request content.
     *
     * @generated from protobuf field: repeated payload.v1.Insert.Request requests = 1;
     */
    requests: Insert_Request[];
}
/**
 * Represent the insert by binary object request.
 *
 * @generated from protobuf message payload.v1.Insert.ObjectRequest
 */
export interface Insert_ObjectRequest {
    /**
     * The binary object to be inserted.
     *
     * @generated from protobuf field: payload.v1.Object.Blob object = 1;
     */
    object?: Object_Blob;
    /**
     * The configuration of the insert request.
     *
     * @generated from protobuf field: payload.v1.Insert.Config config = 2;
     */
    config?: Insert_Config;
    /**
     * Filter configurations.
     *
     * @generated from protobuf field: payload.v1.Filter.Target vectorizer = 3;
     */
    vectorizer?: Filter_Target;
}
/**
 * Represent the multiple insert by binary object request.
 *
 * @generated from protobuf message payload.v1.Insert.MultiObjectRequest
 */
export interface Insert_MultiObjectRequest {
    /**
     * Represent multiple insert by object content.
     *
     * @generated from protobuf field: repeated payload.v1.Insert.ObjectRequest requests = 1;
     */
    requests: Insert_ObjectRequest[];
}
/**
 * Represent insert configurations.
 *
 * @generated from protobuf message payload.v1.Insert.Config
 */
export interface Insert_Config {
    /**
     * A flag to skip exist check during insert operation.
     *
     * @generated from protobuf field: bool skip_strict_exist_check = 1;
     */
    skip_strict_exist_check: boolean;
    /**
     * Filter configurations.
     *
     * @generated from protobuf field: payload.v1.Filter.Config filters = 2;
     */
    filters?: Filter_Config;
    /**
     * Insert timestamp.
     *
     * @generated from protobuf field: int64 timestamp = 3;
     */
    timestamp: bigint;
}
/**
 * Update related messages
 *
 * @generated from protobuf message payload.v1.Update
 */
export interface Update {
}
/**
 * Represent the update request.
 *
 * @generated from protobuf message payload.v1.Update.Request
 */
export interface Update_Request {
    /**
     * The vector to be updated.
     *
     * @generated from protobuf field: payload.v1.Object.Vector vector = 1;
     */
    vector?: Object_Vector;
    /**
     * The configuration of the update request.
     *
     * @generated from protobuf field: payload.v1.Update.Config config = 2;
     */
    config?: Update_Config;
}
/**
 * Represent the multiple update request.
 *
 * @generated from protobuf message payload.v1.Update.MultiRequest
 */
export interface Update_MultiRequest {
    /**
     * Represent the multiple update request content.
     *
     * @generated from protobuf field: repeated payload.v1.Update.Request requests = 1;
     */
    requests: Update_Request[];
}
/**
 * Represent the update binary object request.
 *
 * @generated from protobuf message payload.v1.Update.ObjectRequest
 */
export interface Update_ObjectRequest {
    /**
     * The binary object to be updated.
     *
     * @generated from protobuf field: payload.v1.Object.Blob object = 1;
     */
    object?: Object_Blob;
    /**
     * The configuration of the update request.
     *
     * @generated from protobuf field: payload.v1.Update.Config config = 2;
     */
    config?: Update_Config;
    /**
     * Filter target.
     *
     * @generated from protobuf field: payload.v1.Filter.Target vectorizer = 3;
     */
    vectorizer?: Filter_Target;
}
/**
 * Represent the multiple update binary object request.
 *
 * @generated from protobuf message payload.v1.Update.MultiObjectRequest
 */
export interface Update_MultiObjectRequest {
    /**
     * Represent the multiple update object request content.
     *
     * @generated from protobuf field: repeated payload.v1.Update.ObjectRequest requests = 1;
     */
    requests: Update_ObjectRequest[];
}
/**
 * Represent the update configuration.
 *
 * @generated from protobuf message payload.v1.Update.Config
 */
export interface Update_Config {
    /**
     * A flag to skip exist check during update operation.
     *
     * @generated from protobuf field: bool skip_strict_exist_check = 1;
     */
    skip_strict_exist_check: boolean;
    /**
     * Filter configuration.
     *
     * @generated from protobuf field: payload.v1.Filter.Config filters = 2;
     */
    filters?: Filter_Config;
    /**
     * Update timestamp.
     *
     * @generated from protobuf field: int64 timestamp = 3;
     */
    timestamp: bigint;
    /**
     * A flag to disable balanced update (split remove -> insert operation)
     * during update operation.
     *
     * @generated from protobuf field: bool disable_balanced_update = 4;
     */
    disable_balanced_update: boolean;
}
/**
 * Upsert related messages.
 *
 * @generated from protobuf message payload.v1.Upsert
 */
export interface Upsert {
}
/**
 * Represent the upsert request.
 *
 * @generated from protobuf message payload.v1.Upsert.Request
 */
export interface Upsert_Request {
    /**
     * The vector to be upserted.
     *
     * @generated from protobuf field: payload.v1.Object.Vector vector = 1;
     */
    vector?: Object_Vector;
    /**
     * The configuration of the upsert request.
     *
     * @generated from protobuf field: payload.v1.Upsert.Config config = 2;
     */
    config?: Upsert_Config;
}
/**
 * Represent mthe ultiple upsert request.
 *
 * @generated from protobuf message payload.v1.Upsert.MultiRequest
 */
export interface Upsert_MultiRequest {
    /**
     * Represent the multiple upsert request content.
     *
     * @generated from protobuf field: repeated payload.v1.Upsert.Request requests = 1;
     */
    requests: Upsert_Request[];
}
/**
 * Represent the upsert binary object request.
 *
 * @generated from protobuf message payload.v1.Upsert.ObjectRequest
 */
export interface Upsert_ObjectRequest {
    /**
     * The binary object to be upserted.
     *
     * @generated from protobuf field: payload.v1.Object.Blob object = 1;
     */
    object?: Object_Blob;
    /**
     * The configuration of the upsert request.
     *
     * @generated from protobuf field: payload.v1.Upsert.Config config = 2;
     */
    config?: Upsert_Config;
    /**
     * Filter target.
     *
     * @generated from protobuf field: payload.v1.Filter.Target vectorizer = 3;
     */
    vectorizer?: Filter_Target;
}
/**
 * Represent the multiple upsert binary object request.
 *
 * @generated from protobuf message payload.v1.Upsert.MultiObjectRequest
 */
export interface Upsert_MultiObjectRequest {
    /**
     * Represent the multiple upsert object request content.
     *
     * @generated from protobuf field: repeated payload.v1.Upsert.ObjectRequest requests = 1;
     */
    requests: Upsert_ObjectRequest[];
}
/**
 * Represent the upsert configuration.
 *
 * @generated from protobuf message payload.v1.Upsert.Config
 */
export interface Upsert_Config {
    /**
     * A flag to skip exist check during upsert operation.
     *
     * @generated from protobuf field: bool skip_strict_exist_check = 1;
     */
    skip_strict_exist_check: boolean;
    /**
     * Filter configuration.
     *
     * @generated from protobuf field: payload.v1.Filter.Config filters = 2;
     */
    filters?: Filter_Config;
    /**
     * Upsert timestamp.
     *
     * @generated from protobuf field: int64 timestamp = 3;
     */
    timestamp: bigint;
    /**
     * A flag to disable balanced update (split remove -> insert operation)
     * during update operation.
     *
     * @generated from protobuf field: bool disable_balanced_update = 4;
     */
    disable_balanced_update: boolean;
}
/**
 * Remove related messages.
 *
 * @generated from protobuf message payload.v1.Remove
 */
export interface Remove {
}
/**
 * Represent the remove request.
 *
 * @generated from protobuf message payload.v1.Remove.Request
 */
export interface Remove_Request {
    /**
     * The object ID to be removed.
     *
     * @generated from protobuf field: payload.v1.Object.ID id = 1;
     */
    id?: Object_ID;
    /**
     * The configuration of the remove request.
     *
     * @generated from protobuf field: payload.v1.Remove.Config config = 2;
     */
    config?: Remove_Config;
}
/**
 * Represent the multiple remove request.
 *
 * @generated from protobuf message payload.v1.Remove.MultiRequest
 */
export interface Remove_MultiRequest {
    /**
     * Represent the multiple remove request content.
     *
     * @generated from protobuf field: repeated payload.v1.Remove.Request requests = 1;
     */
    requests: Remove_Request[];
}
/**
 * Represent the remove request based on timestamp.
 *
 * @generated from protobuf message payload.v1.Remove.TimestampRequest
 */
export interface Remove_TimestampRequest {
    /**
     * The timestamp comparison list. If more than one is specified, the `AND` search is applied.
     *
     * @generated from protobuf field: repeated payload.v1.Remove.Timestamp timestamps = 1;
     */
    timestamps: Remove_Timestamp[];
}
/**
 * Represent the timestamp comparison.
 *
 * @generated from protobuf message payload.v1.Remove.Timestamp
 */
export interface Remove_Timestamp {
    /**
     * The timestamp.
     *
     * @generated from protobuf field: int64 timestamp = 1;
     */
    timestamp: bigint;
    /**
     * The conditional operator.
     *
     * @generated from protobuf field: payload.v1.Remove.Timestamp.Operator operator = 2;
     */
    operator: Remove_Timestamp_Operator;
}
/**
 * Operator is enum of each conditional operator.
 *
 * @generated from protobuf enum payload.v1.Remove.Timestamp.Operator
 */
export declare enum Remove_Timestamp_Operator {
    /**
     * The timestamp is equal to the specified value in the request.
     *
     * @generated from protobuf enum value: Eq = 0;
     */
    Eq = 0,
    /**
     * The timestamp is not equal to the specified value in the request.
     *
     * @generated from protobuf enum value: Ne = 1;
     */
    Ne = 1,
    /**
     * The timestamp is greater than or equal to the specified value in the request.
     *
     * @generated from protobuf enum value: Ge = 2;
     */
    Ge = 2,
    /**
     * The timestamp is greater than the specified value in the request.
     *
     * @generated from protobuf enum value: Gt = 3;
     */
    Gt = 3,
    /**
     * The timestamp is less than or equal to the specified value in the request.
     *
     * @generated from protobuf enum value: Le = 4;
     */
    Le = 4,
    /**
     * The timestamp is less than the specified value in the request.
     *
     * @generated from protobuf enum value: Lt = 5;
     */
    Lt = 5
}
/**
 * Represent the remove configuration.
 *
 * @generated from protobuf message payload.v1.Remove.Config
 */
export interface Remove_Config {
    /**
     * A flag to skip exist check during upsert operation.
     *
     * @generated from protobuf field: bool skip_strict_exist_check = 1;
     */
    skip_strict_exist_check: boolean;
    /**
     * Remove timestamp.
     *
     * @generated from protobuf field: int64 timestamp = 3;
     */
    timestamp: bigint;
}
/**
 * Common messages.
 *
 * @generated from protobuf message payload.v1.Object
 */
export interface Object {
}
/**
 * Represent a request to fetch raw vector.
 *
 * @generated from protobuf message payload.v1.Object.VectorRequest
 */
export interface Object_VectorRequest {
    /**
     * The vector ID to be fetched.
     *
     * @generated from protobuf field: payload.v1.Object.ID id = 1;
     */
    id?: Object_ID;
    /**
     * Filter configurations.
     *
     * @generated from protobuf field: payload.v1.Filter.Config filters = 2;
     */
    filters?: Filter_Config;
}
/**
 * Represent the ID and distance pair.
 *
 * @generated from protobuf message payload.v1.Object.Distance
 */
export interface Object_Distance {
    /**
     * The vector ID.
     *
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * The distance.
     *
     * @generated from protobuf field: float distance = 2;
     */
    distance: number;
}
/**
 * Represent stream response of distances.
 *
 * @generated from protobuf message payload.v1.Object.StreamDistance
 */
export interface Object_StreamDistance {
    /**
     * @generated from protobuf oneof: payload
     */
    payload: {
        oneofKind: "distance";
        /**
         * The distance.
         *
         * @generated from protobuf field: payload.v1.Object.Distance distance = 1;
         */
        distance: Object_Distance;
    } | {
        oneofKind: "status";
        /**
         * The RPC error status.
         *
         * @generated from protobuf field: google.rpc.Status status = 2;
         */
        status: Status;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Represent the vector ID.
 *
 * @generated from protobuf message payload.v1.Object.ID
 */
export interface Object_ID {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
}
/**
 * Represent multiple vector IDs.
 *
 * @generated from protobuf message payload.v1.Object.IDs
 */
export interface Object_IDs {
    /**
     * @generated from protobuf field: repeated string ids = 1;
     */
    ids: string[];
}
/**
 * Represent a vector.
 *
 * @generated from protobuf message payload.v1.Object.Vector
 */
export interface Object_Vector {
    /**
     * The vector ID.
     *
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * The vector.
     *
     * @generated from protobuf field: repeated float vector = 2;
     */
    vector: number[];
    /**
     * timestamp represents when this vector inserted.
     *
     * @generated from protobuf field: int64 timestamp = 3;
     */
    timestamp: bigint;
}
/**
 * Represent a request to fetch vector meta data.
 *
 * @generated from protobuf message payload.v1.Object.GetTimestampRequest
 */
export interface Object_GetTimestampRequest {
    /**
     * The vector ID to be fetched.
     *
     * @generated from protobuf field: payload.v1.Object.ID id = 1;
     */
    id?: Object_ID;
}
/**
 * Represent a vector meta data.
 *
 * @generated from protobuf message payload.v1.Object.Timestamp
 */
export interface Object_Timestamp {
    /**
     * The vector ID.
     *
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * timestamp represents when this vector inserted.
     *
     * @generated from protobuf field: int64 timestamp = 2;
     */
    timestamp: bigint;
}
/**
 * Represent multiple vectors.
 *
 * @generated from protobuf message payload.v1.Object.Vectors
 */
export interface Object_Vectors {
    /**
     * @generated from protobuf field: repeated payload.v1.Object.Vector vectors = 1;
     */
    vectors: Object_Vector[];
}
/**
 * Represent stream response of the vector.
 *
 * @generated from protobuf message payload.v1.Object.StreamVector
 */
export interface Object_StreamVector {
    /**
     * @generated from protobuf oneof: payload
     */
    payload: {
        oneofKind: "vector";
        /**
         * The vector.
         *
         * @generated from protobuf field: payload.v1.Object.Vector vector = 1;
         */
        vector: Object_Vector;
    } | {
        oneofKind: "status";
        /**
         * The RPC error status.
         *
         * @generated from protobuf field: google.rpc.Status status = 2;
         */
        status: Status;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Represent reshape vector.
 *
 * @generated from protobuf message payload.v1.Object.ReshapeVector
 */
export interface Object_ReshapeVector {
    /**
     * The binary object.
     *
     * @generated from protobuf field: bytes object = 1;
     */
    object: Uint8Array;
    /**
     * The new shape.
     *
     * @generated from protobuf field: repeated int32 shape = 2;
     */
    shape: number[];
}
/**
 * Represent the binary object.
 *
 * @generated from protobuf message payload.v1.Object.Blob
 */
export interface Object_Blob {
    /**
     * The object ID.
     *
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * The binary object.
     *
     * @generated from protobuf field: bytes object = 2;
     */
    object: Uint8Array;
}
/**
 * Represent stream response of binary objects.
 *
 * @generated from protobuf message payload.v1.Object.StreamBlob
 */
export interface Object_StreamBlob {
    /**
     * @generated from protobuf oneof: payload
     */
    payload: {
        oneofKind: "blob";
        /**
         * The binary object.
         *
         * @generated from protobuf field: payload.v1.Object.Blob blob = 1;
         */
        blob: Object_Blob;
    } | {
        oneofKind: "status";
        /**
         * The RPC error status.
         *
         * @generated from protobuf field: google.rpc.Status status = 2;
         */
        status: Status;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Represent the vector location.
 *
 * @generated from protobuf message payload.v1.Object.Location
 */
export interface Object_Location {
    /**
     * The name of the location.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * The UUID of the vector.
     *
     * @generated from protobuf field: string uuid = 2;
     */
    uuid: string;
    /**
     * The IP list.
     *
     * @generated from protobuf field: repeated string ips = 3;
     */
    ips: string[];
}
/**
 * Represent the stream response of the vector location.
 *
 * @generated from protobuf message payload.v1.Object.StreamLocation
 */
export interface Object_StreamLocation {
    /**
     * @generated from protobuf oneof: payload
     */
    payload: {
        oneofKind: "location";
        /**
         * The vector location.
         *
         * @generated from protobuf field: payload.v1.Object.Location location = 1;
         */
        location: Object_Location;
    } | {
        oneofKind: "status";
        /**
         * The RPC error status.
         *
         * @generated from protobuf field: google.rpc.Status status = 2;
         */
        status: Status;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Represent multiple vector locations.
 *
 * @generated from protobuf message payload.v1.Object.Locations
 */
export interface Object_Locations {
    /**
     * @generated from protobuf field: repeated payload.v1.Object.Location locations = 1;
     */
    locations: Object_Location[];
}
/**
 * Represent the list object vector stream request and response.
 *
 * @generated from protobuf message payload.v1.Object.List
 */
export interface Object_List {
}
/**
 * @generated from protobuf message payload.v1.Object.List.Request
 */
export interface Object_List_Request {
}
/**
 * @generated from protobuf message payload.v1.Object.List.Response
 */
export interface Object_List_Response {
    /**
     * @generated from protobuf oneof: payload
     */
    payload: {
        oneofKind: "vector";
        /**
         * The vector
         *
         * @generated from protobuf field: payload.v1.Object.Vector vector = 1;
         */
        vector: Object_Vector;
    } | {
        oneofKind: "status";
        /**
         * The RPC error status.
         *
         * @generated from protobuf field: google.rpc.Status status = 2;
         */
        status: Status;
    } | {
        oneofKind: undefined;
    };
}
/**
 * Control related messages.
 *
 * @generated from protobuf message payload.v1.Control
 */
export interface Control {
}
/**
 * Represent the create index request.
 *
 * @generated from protobuf message payload.v1.Control.CreateIndexRequest
 */
export interface Control_CreateIndexRequest {
    /**
     * The pool size of the create index operation.
     *
     * @generated from protobuf field: uint32 pool_size = 1;
     */
    pool_size: number;
}
/**
 * Discoverer related messages.
 *
 * @generated from protobuf message payload.v1.Discoverer
 */
export interface Discoverer {
}
/**
 * Represent the dicoverer request.
 *
 * @generated from protobuf message payload.v1.Discoverer.Request
 */
export interface Discoverer_Request {
    /**
     * The agent name to be discovered.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * The namespace to be discovered.
     *
     * @generated from protobuf field: string namespace = 2;
     */
    namespace: string;
    /**
     * The node to be discovered.
     *
     * @generated from protobuf field: string node = 3;
     */
    node: string;
}
/**
 * Info related messages.
 *
 * @generated from protobuf message payload.v1.Info
 */
export interface Info {
}
/**
 * Represent the index information messages.
 *
 * @generated from protobuf message payload.v1.Info.Index
 */
export interface Info_Index {
}
/**
 * Represent the index count message.
 *
 * @generated from protobuf message payload.v1.Info.Index.Count
 */
export interface Info_Index_Count {
    /**
     * The stored index count.
     *
     * @generated from protobuf field: uint32 stored = 1;
     */
    stored: number;
    /**
     * The uncommitted index count.
     *
     * @generated from protobuf field: uint32 uncommitted = 2;
     */
    uncommitted: number;
    /**
     * The indexing index count.
     *
     * @generated from protobuf field: bool indexing = 3;
     */
    indexing: boolean;
    /**
     * The saving index count.
     *
     * @generated from protobuf field: bool saving = 4;
     */
    saving: boolean;
}
/**
 * Represent the UUID message.
 *
 * @generated from protobuf message payload.v1.Info.Index.UUID
 */
export interface Info_Index_UUID {
}
/**
 * The committed UUID.
 *
 * @generated from protobuf message payload.v1.Info.Index.UUID.Committed
 */
export interface Info_Index_UUID_Committed {
    /**
     * @generated from protobuf field: string uuid = 1;
     */
    uuid: string;
}
/**
 * The uncommitted UUID.
 *
 * @generated from protobuf message payload.v1.Info.Index.UUID.Uncommitted
 */
export interface Info_Index_UUID_Uncommitted {
    /**
     * @generated from protobuf field: string uuid = 1;
     */
    uuid: string;
}
/**
 * Represent the pod information message.
 *
 * @generated from protobuf message payload.v1.Info.Pod
 */
export interface Info_Pod {
    /**
     * The app name of the pod on the label.
     *
     * @generated from protobuf field: string app_name = 1;
     */
    app_name: string;
    /**
     * The name of the pod.
     *
     * @generated from protobuf field: string name = 2;
     */
    name: string;
    /**
     * The namespace of the pod.
     *
     * @generated from protobuf field: string namespace = 3;
     */
    namespace: string;
    /**
     * The IP of the pod.
     *
     * @generated from protobuf field: string ip = 4;
     */
    ip: string;
    /**
     * The CPU information of the pod.
     *
     * @generated from protobuf field: payload.v1.Info.CPU cpu = 5;
     */
    cpu?: Info_CPU;
    /**
     * The memory information of the pod.
     *
     * @generated from protobuf field: payload.v1.Info.Memory memory = 6;
     */
    memory?: Info_Memory;
    /**
     * The node information of the pod.
     *
     * @generated from protobuf field: payload.v1.Info.Node node = 7;
     */
    node?: Info_Node;
}
/**
 * Represent the node information message.
 *
 * @generated from protobuf message payload.v1.Info.Node
 */
export interface Info_Node {
    /**
     * The name of the node.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * The internal IP address of the node.
     *
     * @generated from protobuf field: string internal_addr = 2;
     */
    internal_addr: string;
    /**
     * The external IP address of the node.
     *
     * @generated from protobuf field: string external_addr = 3;
     */
    external_addr: string;
    /**
     * The CPU information of the node.
     *
     * @generated from protobuf field: payload.v1.Info.CPU cpu = 4;
     */
    cpu?: Info_CPU;
    /**
     * The memory information of the node.
     *
     * @generated from protobuf field: payload.v1.Info.Memory memory = 5;
     */
    memory?: Info_Memory;
    /**
     * The pod information of the node.
     *
     * @generated from protobuf field: payload.v1.Info.Pods Pods = 6 [json_name = "Pods"];
     */
    Pods?: Info_Pods;
}
/**
 * Represent the service information message.
 *
 * @generated from protobuf message payload.v1.Info.Service
 */
export interface Info_Service {
    /**
     * The name of the svc.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * The cluster ip of the svc.
     *
     * @generated from protobuf field: string cluster_ip = 2;
     */
    cluster_ip: string;
    /**
     * The cluster ips of the svc.
     *
     * @generated from protobuf field: repeated string cluster_ips = 3;
     */
    cluster_ips: string[];
    /**
     * The port of the svc.
     *
     * @generated from protobuf field: repeated payload.v1.Info.ServicePort ports = 4;
     */
    ports: Info_ServicePort[];
    /**
     * The labels of the service.
     *
     * @generated from protobuf field: payload.v1.Info.Labels labels = 5;
     */
    labels?: Info_Labels;
    /**
     * The annotations of the service.
     *
     * @generated from protobuf field: payload.v1.Info.Annotations annotations = 6;
     */
    annotations?: Info_Annotations;
}
/**
 * Represets the service port information message.
 *
 * @generated from protobuf message payload.v1.Info.ServicePort
 */
export interface Info_ServicePort {
    /**
     * The name of the port.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
    /**
     * The port number
     *
     * @generated from protobuf field: int32 port = 2;
     */
    port: number;
}
/**
 * Represent the kubernetes labels.
 *
 * @generated from protobuf message payload.v1.Info.Labels
 */
export interface Info_Labels {
    /**
     * @generated from protobuf field: map<string, string> labels = 1;
     */
    labels: {
        [key: string]: string;
    };
}
/**
 * Represent the kubernetes annotations.
 *
 * @generated from protobuf message payload.v1.Info.Annotations
 */
export interface Info_Annotations {
    /**
     * @generated from protobuf field: map<string, string> annotations = 1;
     */
    annotations: {
        [key: string]: string;
    };
}
/**
 * Represent the CPU information message.
 *
 * @generated from protobuf message payload.v1.Info.CPU
 */
export interface Info_CPU {
    /**
     * The CPU resource limit.
     *
     * @generated from protobuf field: double limit = 1;
     */
    limit: number;
    /**
     * The CPU resource requested.
     *
     * @generated from protobuf field: double request = 2;
     */
    request: number;
    /**
     * The CPU usage.
     *
     * @generated from protobuf field: double usage = 3;
     */
    usage: number;
}
/**
 * Represent the memory information message.
 *
 * @generated from protobuf message payload.v1.Info.Memory
 */
export interface Info_Memory {
    /**
     * The memory limit.
     *
     * @generated from protobuf field: double limit = 1;
     */
    limit: number;
    /**
     * The memory requested.
     *
     * @generated from protobuf field: double request = 2;
     */
    request: number;
    /**
     * The memory usage.
     *
     * @generated from protobuf field: double usage = 3;
     */
    usage: number;
}
/**
 * Represent the multiple pod information message.
 *
 * @generated from protobuf message payload.v1.Info.Pods
 */
export interface Info_Pods {
    /**
     * The multiple pod information.
     *
     * @generated from protobuf field: repeated payload.v1.Info.Pod pods = 1;
     */
    pods: Info_Pod[];
}
/**
 * Represent the multiple node information message.
 *
 * @generated from protobuf message payload.v1.Info.Nodes
 */
export interface Info_Nodes {
    /**
     * The multiple node information.
     *
     * @generated from protobuf field: repeated payload.v1.Info.Node nodes = 1;
     */
    nodes: Info_Node[];
}
/**
 * Represent the multiple service information message.
 *
 * @generated from protobuf message payload.v1.Info.Services
 */
export interface Info_Services {
    /**
     * The multiple service information.
     *
     * @generated from protobuf field: repeated payload.v1.Info.Service services = 1;
     */
    services: Info_Service[];
}
/**
 * Represent the multiple IP message.
 *
 * @generated from protobuf message payload.v1.Info.IPs
 */
export interface Info_IPs {
    /**
     * @generated from protobuf field: repeated string ip = 1;
     */
    ip: string[];
}
/**
 * Mirror related messages.
 *
 * @generated from protobuf message payload.v1.Mirror
 */
export interface Mirror {
}
/**
 * Represent server information.
 *
 * @generated from protobuf message payload.v1.Mirror.Target
 */
export interface Mirror_Target {
    /**
     * The target hostname.
     *
     * @generated from protobuf field: string host = 1;
     */
    host: string;
    /**
     * The target port.
     *
     * @generated from protobuf field: uint32 port = 2;
     */
    port: number;
}
/**
 * Represent the multiple Target message.
 *
 * @generated from protobuf message payload.v1.Mirror.Targets
 */
export interface Mirror_Targets {
    /**
     * The multiple target information.
     *
     * @generated from protobuf field: repeated payload.v1.Mirror.Target targets = 1;
     */
    targets: Mirror_Target[];
}
/**
 * Represent an empty message.
 *
 * @generated from protobuf message payload.v1.Empty
 */
export interface Empty {
}
declare class Search$Type extends MessageType<Search> {
    constructor();
    create(value?: PartialMessage<Search>): Search;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Search): Search;
    internalBinaryWrite(message: Search, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Search
 */
export declare const Search: Search$Type;
declare class Search_Request$Type extends MessageType<Search_Request> {
    constructor();
    create(value?: PartialMessage<Search_Request>): Search_Request;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Search_Request): Search_Request;
    internalBinaryWrite(message: Search_Request, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Search.Request
 */
export declare const Search_Request: Search_Request$Type;
declare class Search_MultiRequest$Type extends MessageType<Search_MultiRequest> {
    constructor();
    create(value?: PartialMessage<Search_MultiRequest>): Search_MultiRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Search_MultiRequest): Search_MultiRequest;
    internalBinaryWrite(message: Search_MultiRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Search.MultiRequest
 */
export declare const Search_MultiRequest: Search_MultiRequest$Type;
declare class Search_IDRequest$Type extends MessageType<Search_IDRequest> {
    constructor();
    create(value?: PartialMessage<Search_IDRequest>): Search_IDRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Search_IDRequest): Search_IDRequest;
    internalBinaryWrite(message: Search_IDRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Search.IDRequest
 */
export declare const Search_IDRequest: Search_IDRequest$Type;
declare class Search_MultiIDRequest$Type extends MessageType<Search_MultiIDRequest> {
    constructor();
    create(value?: PartialMessage<Search_MultiIDRequest>): Search_MultiIDRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Search_MultiIDRequest): Search_MultiIDRequest;
    internalBinaryWrite(message: Search_MultiIDRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Search.MultiIDRequest
 */
export declare const Search_MultiIDRequest: Search_MultiIDRequest$Type;
declare class Search_ObjectRequest$Type extends MessageType<Search_ObjectRequest> {
    constructor();
    create(value?: PartialMessage<Search_ObjectRequest>): Search_ObjectRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Search_ObjectRequest): Search_ObjectRequest;
    internalBinaryWrite(message: Search_ObjectRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Search.ObjectRequest
 */
export declare const Search_ObjectRequest: Search_ObjectRequest$Type;
declare class Search_MultiObjectRequest$Type extends MessageType<Search_MultiObjectRequest> {
    constructor();
    create(value?: PartialMessage<Search_MultiObjectRequest>): Search_MultiObjectRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Search_MultiObjectRequest): Search_MultiObjectRequest;
    internalBinaryWrite(message: Search_MultiObjectRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Search.MultiObjectRequest
 */
export declare const Search_MultiObjectRequest: Search_MultiObjectRequest$Type;
declare class Search_Config$Type extends MessageType<Search_Config> {
    constructor();
    create(value?: PartialMessage<Search_Config>): Search_Config;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Search_Config): Search_Config;
    internalBinaryWrite(message: Search_Config, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Search.Config
 */
export declare const Search_Config: Search_Config$Type;
declare class Search_Response$Type extends MessageType<Search_Response> {
    constructor();
    create(value?: PartialMessage<Search_Response>): Search_Response;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Search_Response): Search_Response;
    internalBinaryWrite(message: Search_Response, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Search.Response
 */
export declare const Search_Response: Search_Response$Type;
declare class Search_Responses$Type extends MessageType<Search_Responses> {
    constructor();
    create(value?: PartialMessage<Search_Responses>): Search_Responses;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Search_Responses): Search_Responses;
    internalBinaryWrite(message: Search_Responses, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Search.Responses
 */
export declare const Search_Responses: Search_Responses$Type;
declare class Search_StreamResponse$Type extends MessageType<Search_StreamResponse> {
    constructor();
    create(value?: PartialMessage<Search_StreamResponse>): Search_StreamResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Search_StreamResponse): Search_StreamResponse;
    internalBinaryWrite(message: Search_StreamResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Search.StreamResponse
 */
export declare const Search_StreamResponse: Search_StreamResponse$Type;
declare class Filter$Type extends MessageType<Filter> {
    constructor();
    create(value?: PartialMessage<Filter>): Filter;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Filter): Filter;
    internalBinaryWrite(message: Filter, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Filter
 */
export declare const Filter: Filter$Type;
declare class Filter_Target$Type extends MessageType<Filter_Target> {
    constructor();
    create(value?: PartialMessage<Filter_Target>): Filter_Target;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Filter_Target): Filter_Target;
    internalBinaryWrite(message: Filter_Target, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Filter.Target
 */
export declare const Filter_Target: Filter_Target$Type;
declare class Filter_Config$Type extends MessageType<Filter_Config> {
    constructor();
    create(value?: PartialMessage<Filter_Config>): Filter_Config;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Filter_Config): Filter_Config;
    internalBinaryWrite(message: Filter_Config, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Filter.Config
 */
export declare const Filter_Config: Filter_Config$Type;
declare class Insert$Type extends MessageType<Insert> {
    constructor();
    create(value?: PartialMessage<Insert>): Insert;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Insert): Insert;
    internalBinaryWrite(message: Insert, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Insert
 */
export declare const Insert: Insert$Type;
declare class Insert_Request$Type extends MessageType<Insert_Request> {
    constructor();
    create(value?: PartialMessage<Insert_Request>): Insert_Request;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Insert_Request): Insert_Request;
    internalBinaryWrite(message: Insert_Request, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Insert.Request
 */
export declare const Insert_Request: Insert_Request$Type;
declare class Insert_MultiRequest$Type extends MessageType<Insert_MultiRequest> {
    constructor();
    create(value?: PartialMessage<Insert_MultiRequest>): Insert_MultiRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Insert_MultiRequest): Insert_MultiRequest;
    internalBinaryWrite(message: Insert_MultiRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Insert.MultiRequest
 */
export declare const Insert_MultiRequest: Insert_MultiRequest$Type;
declare class Insert_ObjectRequest$Type extends MessageType<Insert_ObjectRequest> {
    constructor();
    create(value?: PartialMessage<Insert_ObjectRequest>): Insert_ObjectRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Insert_ObjectRequest): Insert_ObjectRequest;
    internalBinaryWrite(message: Insert_ObjectRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Insert.ObjectRequest
 */
export declare const Insert_ObjectRequest: Insert_ObjectRequest$Type;
declare class Insert_MultiObjectRequest$Type extends MessageType<Insert_MultiObjectRequest> {
    constructor();
    create(value?: PartialMessage<Insert_MultiObjectRequest>): Insert_MultiObjectRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Insert_MultiObjectRequest): Insert_MultiObjectRequest;
    internalBinaryWrite(message: Insert_MultiObjectRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Insert.MultiObjectRequest
 */
export declare const Insert_MultiObjectRequest: Insert_MultiObjectRequest$Type;
declare class Insert_Config$Type extends MessageType<Insert_Config> {
    constructor();
    create(value?: PartialMessage<Insert_Config>): Insert_Config;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Insert_Config): Insert_Config;
    internalBinaryWrite(message: Insert_Config, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Insert.Config
 */
export declare const Insert_Config: Insert_Config$Type;
declare class Update$Type extends MessageType<Update> {
    constructor();
    create(value?: PartialMessage<Update>): Update;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Update): Update;
    internalBinaryWrite(message: Update, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Update
 */
export declare const Update: Update$Type;
declare class Update_Request$Type extends MessageType<Update_Request> {
    constructor();
    create(value?: PartialMessage<Update_Request>): Update_Request;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Update_Request): Update_Request;
    internalBinaryWrite(message: Update_Request, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Update.Request
 */
export declare const Update_Request: Update_Request$Type;
declare class Update_MultiRequest$Type extends MessageType<Update_MultiRequest> {
    constructor();
    create(value?: PartialMessage<Update_MultiRequest>): Update_MultiRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Update_MultiRequest): Update_MultiRequest;
    internalBinaryWrite(message: Update_MultiRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Update.MultiRequest
 */
export declare const Update_MultiRequest: Update_MultiRequest$Type;
declare class Update_ObjectRequest$Type extends MessageType<Update_ObjectRequest> {
    constructor();
    create(value?: PartialMessage<Update_ObjectRequest>): Update_ObjectRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Update_ObjectRequest): Update_ObjectRequest;
    internalBinaryWrite(message: Update_ObjectRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Update.ObjectRequest
 */
export declare const Update_ObjectRequest: Update_ObjectRequest$Type;
declare class Update_MultiObjectRequest$Type extends MessageType<Update_MultiObjectRequest> {
    constructor();
    create(value?: PartialMessage<Update_MultiObjectRequest>): Update_MultiObjectRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Update_MultiObjectRequest): Update_MultiObjectRequest;
    internalBinaryWrite(message: Update_MultiObjectRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Update.MultiObjectRequest
 */
export declare const Update_MultiObjectRequest: Update_MultiObjectRequest$Type;
declare class Update_Config$Type extends MessageType<Update_Config> {
    constructor();
    create(value?: PartialMessage<Update_Config>): Update_Config;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Update_Config): Update_Config;
    internalBinaryWrite(message: Update_Config, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Update.Config
 */
export declare const Update_Config: Update_Config$Type;
declare class Upsert$Type extends MessageType<Upsert> {
    constructor();
    create(value?: PartialMessage<Upsert>): Upsert;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Upsert): Upsert;
    internalBinaryWrite(message: Upsert, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Upsert
 */
export declare const Upsert: Upsert$Type;
declare class Upsert_Request$Type extends MessageType<Upsert_Request> {
    constructor();
    create(value?: PartialMessage<Upsert_Request>): Upsert_Request;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Upsert_Request): Upsert_Request;
    internalBinaryWrite(message: Upsert_Request, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Upsert.Request
 */
export declare const Upsert_Request: Upsert_Request$Type;
declare class Upsert_MultiRequest$Type extends MessageType<Upsert_MultiRequest> {
    constructor();
    create(value?: PartialMessage<Upsert_MultiRequest>): Upsert_MultiRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Upsert_MultiRequest): Upsert_MultiRequest;
    internalBinaryWrite(message: Upsert_MultiRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Upsert.MultiRequest
 */
export declare const Upsert_MultiRequest: Upsert_MultiRequest$Type;
declare class Upsert_ObjectRequest$Type extends MessageType<Upsert_ObjectRequest> {
    constructor();
    create(value?: PartialMessage<Upsert_ObjectRequest>): Upsert_ObjectRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Upsert_ObjectRequest): Upsert_ObjectRequest;
    internalBinaryWrite(message: Upsert_ObjectRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Upsert.ObjectRequest
 */
export declare const Upsert_ObjectRequest: Upsert_ObjectRequest$Type;
declare class Upsert_MultiObjectRequest$Type extends MessageType<Upsert_MultiObjectRequest> {
    constructor();
    create(value?: PartialMessage<Upsert_MultiObjectRequest>): Upsert_MultiObjectRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Upsert_MultiObjectRequest): Upsert_MultiObjectRequest;
    internalBinaryWrite(message: Upsert_MultiObjectRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Upsert.MultiObjectRequest
 */
export declare const Upsert_MultiObjectRequest: Upsert_MultiObjectRequest$Type;
declare class Upsert_Config$Type extends MessageType<Upsert_Config> {
    constructor();
    create(value?: PartialMessage<Upsert_Config>): Upsert_Config;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Upsert_Config): Upsert_Config;
    internalBinaryWrite(message: Upsert_Config, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Upsert.Config
 */
export declare const Upsert_Config: Upsert_Config$Type;
declare class Remove$Type extends MessageType<Remove> {
    constructor();
    create(value?: PartialMessage<Remove>): Remove;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Remove): Remove;
    internalBinaryWrite(message: Remove, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Remove
 */
export declare const Remove: Remove$Type;
declare class Remove_Request$Type extends MessageType<Remove_Request> {
    constructor();
    create(value?: PartialMessage<Remove_Request>): Remove_Request;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Remove_Request): Remove_Request;
    internalBinaryWrite(message: Remove_Request, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Remove.Request
 */
export declare const Remove_Request: Remove_Request$Type;
declare class Remove_MultiRequest$Type extends MessageType<Remove_MultiRequest> {
    constructor();
    create(value?: PartialMessage<Remove_MultiRequest>): Remove_MultiRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Remove_MultiRequest): Remove_MultiRequest;
    internalBinaryWrite(message: Remove_MultiRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Remove.MultiRequest
 */
export declare const Remove_MultiRequest: Remove_MultiRequest$Type;
declare class Remove_TimestampRequest$Type extends MessageType<Remove_TimestampRequest> {
    constructor();
    create(value?: PartialMessage<Remove_TimestampRequest>): Remove_TimestampRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Remove_TimestampRequest): Remove_TimestampRequest;
    internalBinaryWrite(message: Remove_TimestampRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Remove.TimestampRequest
 */
export declare const Remove_TimestampRequest: Remove_TimestampRequest$Type;
declare class Remove_Timestamp$Type extends MessageType<Remove_Timestamp> {
    constructor();
    create(value?: PartialMessage<Remove_Timestamp>): Remove_Timestamp;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Remove_Timestamp): Remove_Timestamp;
    internalBinaryWrite(message: Remove_Timestamp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Remove.Timestamp
 */
export declare const Remove_Timestamp: Remove_Timestamp$Type;
declare class Remove_Config$Type extends MessageType<Remove_Config> {
    constructor();
    create(value?: PartialMessage<Remove_Config>): Remove_Config;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Remove_Config): Remove_Config;
    internalBinaryWrite(message: Remove_Config, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Remove.Config
 */
export declare const Remove_Config: Remove_Config$Type;
declare class Object$Type extends MessageType<Object> {
    constructor();
    create(value?: PartialMessage<Object>): Object;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object): Object;
    internalBinaryWrite(message: Object, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object
 */
export declare const Object: Object$Type;
declare class Object_VectorRequest$Type extends MessageType<Object_VectorRequest> {
    constructor();
    create(value?: PartialMessage<Object_VectorRequest>): Object_VectorRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_VectorRequest): Object_VectorRequest;
    internalBinaryWrite(message: Object_VectorRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.VectorRequest
 */
export declare const Object_VectorRequest: Object_VectorRequest$Type;
declare class Object_Distance$Type extends MessageType<Object_Distance> {
    constructor();
    create(value?: PartialMessage<Object_Distance>): Object_Distance;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_Distance): Object_Distance;
    internalBinaryWrite(message: Object_Distance, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.Distance
 */
export declare const Object_Distance: Object_Distance$Type;
declare class Object_StreamDistance$Type extends MessageType<Object_StreamDistance> {
    constructor();
    create(value?: PartialMessage<Object_StreamDistance>): Object_StreamDistance;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_StreamDistance): Object_StreamDistance;
    internalBinaryWrite(message: Object_StreamDistance, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.StreamDistance
 */
export declare const Object_StreamDistance: Object_StreamDistance$Type;
declare class Object_ID$Type extends MessageType<Object_ID> {
    constructor();
    create(value?: PartialMessage<Object_ID>): Object_ID;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_ID): Object_ID;
    internalBinaryWrite(message: Object_ID, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.ID
 */
export declare const Object_ID: Object_ID$Type;
declare class Object_IDs$Type extends MessageType<Object_IDs> {
    constructor();
    create(value?: PartialMessage<Object_IDs>): Object_IDs;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_IDs): Object_IDs;
    internalBinaryWrite(message: Object_IDs, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.IDs
 */
export declare const Object_IDs: Object_IDs$Type;
declare class Object_Vector$Type extends MessageType<Object_Vector> {
    constructor();
    create(value?: PartialMessage<Object_Vector>): Object_Vector;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_Vector): Object_Vector;
    internalBinaryWrite(message: Object_Vector, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.Vector
 */
export declare const Object_Vector: Object_Vector$Type;
declare class Object_GetTimestampRequest$Type extends MessageType<Object_GetTimestampRequest> {
    constructor();
    create(value?: PartialMessage<Object_GetTimestampRequest>): Object_GetTimestampRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_GetTimestampRequest): Object_GetTimestampRequest;
    internalBinaryWrite(message: Object_GetTimestampRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.GetTimestampRequest
 */
export declare const Object_GetTimestampRequest: Object_GetTimestampRequest$Type;
declare class Object_Timestamp$Type extends MessageType<Object_Timestamp> {
    constructor();
    create(value?: PartialMessage<Object_Timestamp>): Object_Timestamp;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_Timestamp): Object_Timestamp;
    internalBinaryWrite(message: Object_Timestamp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.Timestamp
 */
export declare const Object_Timestamp: Object_Timestamp$Type;
declare class Object_Vectors$Type extends MessageType<Object_Vectors> {
    constructor();
    create(value?: PartialMessage<Object_Vectors>): Object_Vectors;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_Vectors): Object_Vectors;
    internalBinaryWrite(message: Object_Vectors, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.Vectors
 */
export declare const Object_Vectors: Object_Vectors$Type;
declare class Object_StreamVector$Type extends MessageType<Object_StreamVector> {
    constructor();
    create(value?: PartialMessage<Object_StreamVector>): Object_StreamVector;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_StreamVector): Object_StreamVector;
    internalBinaryWrite(message: Object_StreamVector, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.StreamVector
 */
export declare const Object_StreamVector: Object_StreamVector$Type;
declare class Object_ReshapeVector$Type extends MessageType<Object_ReshapeVector> {
    constructor();
    create(value?: PartialMessage<Object_ReshapeVector>): Object_ReshapeVector;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_ReshapeVector): Object_ReshapeVector;
    internalBinaryWrite(message: Object_ReshapeVector, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.ReshapeVector
 */
export declare const Object_ReshapeVector: Object_ReshapeVector$Type;
declare class Object_Blob$Type extends MessageType<Object_Blob> {
    constructor();
    create(value?: PartialMessage<Object_Blob>): Object_Blob;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_Blob): Object_Blob;
    internalBinaryWrite(message: Object_Blob, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.Blob
 */
export declare const Object_Blob: Object_Blob$Type;
declare class Object_StreamBlob$Type extends MessageType<Object_StreamBlob> {
    constructor();
    create(value?: PartialMessage<Object_StreamBlob>): Object_StreamBlob;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_StreamBlob): Object_StreamBlob;
    internalBinaryWrite(message: Object_StreamBlob, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.StreamBlob
 */
export declare const Object_StreamBlob: Object_StreamBlob$Type;
declare class Object_Location$Type extends MessageType<Object_Location> {
    constructor();
    create(value?: PartialMessage<Object_Location>): Object_Location;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_Location): Object_Location;
    internalBinaryWrite(message: Object_Location, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.Location
 */
export declare const Object_Location: Object_Location$Type;
declare class Object_StreamLocation$Type extends MessageType<Object_StreamLocation> {
    constructor();
    create(value?: PartialMessage<Object_StreamLocation>): Object_StreamLocation;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_StreamLocation): Object_StreamLocation;
    internalBinaryWrite(message: Object_StreamLocation, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.StreamLocation
 */
export declare const Object_StreamLocation: Object_StreamLocation$Type;
declare class Object_Locations$Type extends MessageType<Object_Locations> {
    constructor();
    create(value?: PartialMessage<Object_Locations>): Object_Locations;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_Locations): Object_Locations;
    internalBinaryWrite(message: Object_Locations, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.Locations
 */
export declare const Object_Locations: Object_Locations$Type;
declare class Object_List$Type extends MessageType<Object_List> {
    constructor();
    create(value?: PartialMessage<Object_List>): Object_List;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_List): Object_List;
    internalBinaryWrite(message: Object_List, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.List
 */
export declare const Object_List: Object_List$Type;
declare class Object_List_Request$Type extends MessageType<Object_List_Request> {
    constructor();
    create(value?: PartialMessage<Object_List_Request>): Object_List_Request;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_List_Request): Object_List_Request;
    internalBinaryWrite(message: Object_List_Request, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.List.Request
 */
export declare const Object_List_Request: Object_List_Request$Type;
declare class Object_List_Response$Type extends MessageType<Object_List_Response> {
    constructor();
    create(value?: PartialMessage<Object_List_Response>): Object_List_Response;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Object_List_Response): Object_List_Response;
    internalBinaryWrite(message: Object_List_Response, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Object.List.Response
 */
export declare const Object_List_Response: Object_List_Response$Type;
declare class Control$Type extends MessageType<Control> {
    constructor();
    create(value?: PartialMessage<Control>): Control;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Control): Control;
    internalBinaryWrite(message: Control, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Control
 */
export declare const Control: Control$Type;
declare class Control_CreateIndexRequest$Type extends MessageType<Control_CreateIndexRequest> {
    constructor();
    create(value?: PartialMessage<Control_CreateIndexRequest>): Control_CreateIndexRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Control_CreateIndexRequest): Control_CreateIndexRequest;
    internalBinaryWrite(message: Control_CreateIndexRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Control.CreateIndexRequest
 */
export declare const Control_CreateIndexRequest: Control_CreateIndexRequest$Type;
declare class Discoverer$Type extends MessageType<Discoverer> {
    constructor();
    create(value?: PartialMessage<Discoverer>): Discoverer;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Discoverer): Discoverer;
    internalBinaryWrite(message: Discoverer, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Discoverer
 */
export declare const Discoverer: Discoverer$Type;
declare class Discoverer_Request$Type extends MessageType<Discoverer_Request> {
    constructor();
    create(value?: PartialMessage<Discoverer_Request>): Discoverer_Request;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Discoverer_Request): Discoverer_Request;
    internalBinaryWrite(message: Discoverer_Request, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Discoverer.Request
 */
export declare const Discoverer_Request: Discoverer_Request$Type;
declare class Info$Type extends MessageType<Info> {
    constructor();
    create(value?: PartialMessage<Info>): Info;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info): Info;
    internalBinaryWrite(message: Info, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info
 */
export declare const Info: Info$Type;
declare class Info_Index$Type extends MessageType<Info_Index> {
    constructor();
    create(value?: PartialMessage<Info_Index>): Info_Index;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info_Index): Info_Index;
    internalBinaryWrite(message: Info_Index, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info.Index
 */
export declare const Info_Index: Info_Index$Type;
declare class Info_Index_Count$Type extends MessageType<Info_Index_Count> {
    constructor();
    create(value?: PartialMessage<Info_Index_Count>): Info_Index_Count;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info_Index_Count): Info_Index_Count;
    internalBinaryWrite(message: Info_Index_Count, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info.Index.Count
 */
export declare const Info_Index_Count: Info_Index_Count$Type;
declare class Info_Index_UUID$Type extends MessageType<Info_Index_UUID> {
    constructor();
    create(value?: PartialMessage<Info_Index_UUID>): Info_Index_UUID;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info_Index_UUID): Info_Index_UUID;
    internalBinaryWrite(message: Info_Index_UUID, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info.Index.UUID
 */
export declare const Info_Index_UUID: Info_Index_UUID$Type;
declare class Info_Index_UUID_Committed$Type extends MessageType<Info_Index_UUID_Committed> {
    constructor();
    create(value?: PartialMessage<Info_Index_UUID_Committed>): Info_Index_UUID_Committed;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info_Index_UUID_Committed): Info_Index_UUID_Committed;
    internalBinaryWrite(message: Info_Index_UUID_Committed, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info.Index.UUID.Committed
 */
export declare const Info_Index_UUID_Committed: Info_Index_UUID_Committed$Type;
declare class Info_Index_UUID_Uncommitted$Type extends MessageType<Info_Index_UUID_Uncommitted> {
    constructor();
    create(value?: PartialMessage<Info_Index_UUID_Uncommitted>): Info_Index_UUID_Uncommitted;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info_Index_UUID_Uncommitted): Info_Index_UUID_Uncommitted;
    internalBinaryWrite(message: Info_Index_UUID_Uncommitted, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info.Index.UUID.Uncommitted
 */
export declare const Info_Index_UUID_Uncommitted: Info_Index_UUID_Uncommitted$Type;
declare class Info_Pod$Type extends MessageType<Info_Pod> {
    constructor();
    create(value?: PartialMessage<Info_Pod>): Info_Pod;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info_Pod): Info_Pod;
    internalBinaryWrite(message: Info_Pod, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info.Pod
 */
export declare const Info_Pod: Info_Pod$Type;
declare class Info_Node$Type extends MessageType<Info_Node> {
    constructor();
    create(value?: PartialMessage<Info_Node>): Info_Node;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info_Node): Info_Node;
    internalBinaryWrite(message: Info_Node, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info.Node
 */
export declare const Info_Node: Info_Node$Type;
declare class Info_Service$Type extends MessageType<Info_Service> {
    constructor();
    create(value?: PartialMessage<Info_Service>): Info_Service;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info_Service): Info_Service;
    internalBinaryWrite(message: Info_Service, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info.Service
 */
export declare const Info_Service: Info_Service$Type;
declare class Info_ServicePort$Type extends MessageType<Info_ServicePort> {
    constructor();
    create(value?: PartialMessage<Info_ServicePort>): Info_ServicePort;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info_ServicePort): Info_ServicePort;
    internalBinaryWrite(message: Info_ServicePort, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info.ServicePort
 */
export declare const Info_ServicePort: Info_ServicePort$Type;
declare class Info_Labels$Type extends MessageType<Info_Labels> {
    constructor();
    create(value?: PartialMessage<Info_Labels>): Info_Labels;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info_Labels): Info_Labels;
    private binaryReadMap1;
    internalBinaryWrite(message: Info_Labels, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info.Labels
 */
export declare const Info_Labels: Info_Labels$Type;
declare class Info_Annotations$Type extends MessageType<Info_Annotations> {
    constructor();
    create(value?: PartialMessage<Info_Annotations>): Info_Annotations;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info_Annotations): Info_Annotations;
    private binaryReadMap1;
    internalBinaryWrite(message: Info_Annotations, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info.Annotations
 */
export declare const Info_Annotations: Info_Annotations$Type;
declare class Info_CPU$Type extends MessageType<Info_CPU> {
    constructor();
    create(value?: PartialMessage<Info_CPU>): Info_CPU;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info_CPU): Info_CPU;
    internalBinaryWrite(message: Info_CPU, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info.CPU
 */
export declare const Info_CPU: Info_CPU$Type;
declare class Info_Memory$Type extends MessageType<Info_Memory> {
    constructor();
    create(value?: PartialMessage<Info_Memory>): Info_Memory;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info_Memory): Info_Memory;
    internalBinaryWrite(message: Info_Memory, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info.Memory
 */
export declare const Info_Memory: Info_Memory$Type;
declare class Info_Pods$Type extends MessageType<Info_Pods> {
    constructor();
    create(value?: PartialMessage<Info_Pods>): Info_Pods;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info_Pods): Info_Pods;
    internalBinaryWrite(message: Info_Pods, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info.Pods
 */
export declare const Info_Pods: Info_Pods$Type;
declare class Info_Nodes$Type extends MessageType<Info_Nodes> {
    constructor();
    create(value?: PartialMessage<Info_Nodes>): Info_Nodes;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info_Nodes): Info_Nodes;
    internalBinaryWrite(message: Info_Nodes, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info.Nodes
 */
export declare const Info_Nodes: Info_Nodes$Type;
declare class Info_Services$Type extends MessageType<Info_Services> {
    constructor();
    create(value?: PartialMessage<Info_Services>): Info_Services;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info_Services): Info_Services;
    internalBinaryWrite(message: Info_Services, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info.Services
 */
export declare const Info_Services: Info_Services$Type;
declare class Info_IPs$Type extends MessageType<Info_IPs> {
    constructor();
    create(value?: PartialMessage<Info_IPs>): Info_IPs;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Info_IPs): Info_IPs;
    internalBinaryWrite(message: Info_IPs, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Info.IPs
 */
export declare const Info_IPs: Info_IPs$Type;
declare class Mirror$Type extends MessageType<Mirror> {
    constructor();
    create(value?: PartialMessage<Mirror>): Mirror;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Mirror): Mirror;
    internalBinaryWrite(message: Mirror, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Mirror
 */
export declare const Mirror: Mirror$Type;
declare class Mirror_Target$Type extends MessageType<Mirror_Target> {
    constructor();
    create(value?: PartialMessage<Mirror_Target>): Mirror_Target;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Mirror_Target): Mirror_Target;
    internalBinaryWrite(message: Mirror_Target, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Mirror.Target
 */
export declare const Mirror_Target: Mirror_Target$Type;
declare class Mirror_Targets$Type extends MessageType<Mirror_Targets> {
    constructor();
    create(value?: PartialMessage<Mirror_Targets>): Mirror_Targets;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Mirror_Targets): Mirror_Targets;
    internalBinaryWrite(message: Mirror_Targets, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Mirror.Targets
 */
export declare const Mirror_Targets: Mirror_Targets$Type;
declare class Empty$Type extends MessageType<Empty> {
    constructor();
    create(value?: PartialMessage<Empty>): Empty;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Empty): Empty;
    internalBinaryWrite(message: Empty, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message payload.v1.Empty
 */
export declare const Empty: Empty$Type;
export {};
