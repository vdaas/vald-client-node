// Copyright 2023 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.6.0 with parameter "target=js,js_import_style=legacy_commonjs,keep_empty_files=true"
// @generated from file buf/validate/validate.proto (package buf.validate, syntax proto3)
/* eslint-disable */
// @ts-nocheck

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });

const { Duration, proto3, Timestamp } = require("@bufbuild/protobuf");
const { Constraint } = require("./expression_pb.js");

/**
 * WellKnownRegex contain some well-known patterns.
 *
 * @generated from enum buf.validate.KnownRegex
 */
const KnownRegex = proto3.makeEnum(
  "buf.validate.KnownRegex",
  [
    {no: 0, name: "KNOWN_REGEX_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "KNOWN_REGEX_HTTP_HEADER_NAME", localName: "HTTP_HEADER_NAME"},
    {no: 2, name: "KNOWN_REGEX_HTTP_HEADER_VALUE", localName: "HTTP_HEADER_VALUE"},
  ],
);

/**
 * MessageConstraints represents validation rules that are applied to the entire message.
 * It includes disabling options and a list of Constraint messages representing Common Expression Language (CEL) validation rules.
 *
 * @generated from message buf.validate.MessageConstraints
 */
const MessageConstraints = proto3.makeMessageType(
  "buf.validate.MessageConstraints",
  () => [
    { no: 1, name: "disabled", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 3, name: "cel", kind: "message", T: Constraint, repeated: true },
  ],
);

/**
 * The `OneofConstraints` message type enables you to manage constraints for
 * oneof fields in your protobuf messages.
 *
 * @generated from message buf.validate.OneofConstraints
 */
const OneofConstraints = proto3.makeMessageType(
  "buf.validate.OneofConstraints",
  () => [
    { no: 1, name: "required", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ],
);

/**
 * FieldRules encapsulates the rules for each type of field. Depending on the
 * field, the correct set should be used to ensure proper validations.
 *
 * @generated from message buf.validate.FieldConstraints
 */
const FieldConstraints = proto3.makeMessageType(
  "buf.validate.FieldConstraints",
  () => [
    { no: 23, name: "cel", kind: "message", T: Constraint, repeated: true },
    { no: 24, name: "skipped", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 25, name: "required", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 26, name: "ignore_empty", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 1, name: "float", kind: "message", T: FloatRules, oneof: "type" },
    { no: 2, name: "double", kind: "message", T: DoubleRules, oneof: "type" },
    { no: 3, name: "int32", kind: "message", T: Int32Rules, oneof: "type" },
    { no: 4, name: "int64", kind: "message", T: Int64Rules, oneof: "type" },
    { no: 5, name: "uint32", kind: "message", T: UInt32Rules, oneof: "type" },
    { no: 6, name: "uint64", kind: "message", T: UInt64Rules, oneof: "type" },
    { no: 7, name: "sint32", kind: "message", T: SInt32Rules, oneof: "type" },
    { no: 8, name: "sint64", kind: "message", T: SInt64Rules, oneof: "type" },
    { no: 9, name: "fixed32", kind: "message", T: Fixed32Rules, oneof: "type" },
    { no: 10, name: "fixed64", kind: "message", T: Fixed64Rules, oneof: "type" },
    { no: 11, name: "sfixed32", kind: "message", T: SFixed32Rules, oneof: "type" },
    { no: 12, name: "sfixed64", kind: "message", T: SFixed64Rules, oneof: "type" },
    { no: 13, name: "bool", kind: "message", T: BoolRules, oneof: "type" },
    { no: 14, name: "string", kind: "message", T: StringRules, oneof: "type" },
    { no: 15, name: "bytes", kind: "message", T: BytesRules, oneof: "type" },
    { no: 16, name: "enum", kind: "message", T: EnumRules, oneof: "type" },
    { no: 18, name: "repeated", kind: "message", T: RepeatedRules, oneof: "type" },
    { no: 19, name: "map", kind: "message", T: MapRules, oneof: "type" },
    { no: 20, name: "any", kind: "message", T: AnyRules, oneof: "type" },
    { no: 21, name: "duration", kind: "message", T: DurationRules, oneof: "type" },
    { no: 22, name: "timestamp", kind: "message", T: TimestampRules, oneof: "type" },
  ],
);

/**
 * FloatRules describes the constraints applied to `float` values. These
 * rules may also be applied to the `google.protobuf.FloatValue` Well-Known-Type.
 *
 * @generated from message buf.validate.FloatRules
 */
const FloatRules = proto3.makeMessageType(
  "buf.validate.FloatRules",
  () => [
    { no: 1, name: "const", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 2, name: "lt", kind: "scalar", T: 2 /* ScalarType.FLOAT */, oneof: "less_than" },
    { no: 3, name: "lte", kind: "scalar", T: 2 /* ScalarType.FLOAT */, oneof: "less_than" },
    { no: 4, name: "gt", kind: "scalar", T: 2 /* ScalarType.FLOAT */, oneof: "greater_than" },
    { no: 5, name: "gte", kind: "scalar", T: 2 /* ScalarType.FLOAT */, oneof: "greater_than" },
    { no: 6, name: "in", kind: "scalar", T: 2 /* ScalarType.FLOAT */, repeated: true },
    { no: 7, name: "not_in", kind: "scalar", T: 2 /* ScalarType.FLOAT */, repeated: true },
    { no: 8, name: "finite", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * DoubleRules describes the constraints applied to `double` values. These
 * rules may also be applied to the `google.protobuf.DoubleValue` Well-Known-Type.
 *
 * @generated from message buf.validate.DoubleRules
 */
const DoubleRules = proto3.makeMessageType(
  "buf.validate.DoubleRules",
  () => [
    { no: 1, name: "const", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true },
    { no: 2, name: "lt", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, oneof: "less_than" },
    { no: 3, name: "lte", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, oneof: "less_than" },
    { no: 4, name: "gt", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, oneof: "greater_than" },
    { no: 5, name: "gte", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, oneof: "greater_than" },
    { no: 6, name: "in", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, repeated: true },
    { no: 7, name: "not_in", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, repeated: true },
    { no: 8, name: "finite", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * Int32Rules describes the constraints applied to `int32` values. These
 * rules may also be applied to the `google.protobuf.Int32Value` Well-Known-Type.
 *
 * @generated from message buf.validate.Int32Rules
 */
const Int32Rules = proto3.makeMessageType(
  "buf.validate.Int32Rules",
  () => [
    { no: 1, name: "const", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "lt", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "less_than" },
    { no: 3, name: "lte", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "less_than" },
    { no: 4, name: "gt", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "greater_than" },
    { no: 5, name: "gte", kind: "scalar", T: 5 /* ScalarType.INT32 */, oneof: "greater_than" },
    { no: 6, name: "in", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 7, name: "not_in", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ],
);

/**
 * Int64Rules describes the constraints applied to `int64` values. These
 * rules may also be applied to the `google.protobuf.Int64Value` Well-Known-Type.
 *
 * @generated from message buf.validate.Int64Rules
 */
const Int64Rules = proto3.makeMessageType(
  "buf.validate.Int64Rules",
  () => [
    { no: 1, name: "const", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 2, name: "lt", kind: "scalar", T: 3 /* ScalarType.INT64 */, oneof: "less_than" },
    { no: 3, name: "lte", kind: "scalar", T: 3 /* ScalarType.INT64 */, oneof: "less_than" },
    { no: 4, name: "gt", kind: "scalar", T: 3 /* ScalarType.INT64 */, oneof: "greater_than" },
    { no: 5, name: "gte", kind: "scalar", T: 3 /* ScalarType.INT64 */, oneof: "greater_than" },
    { no: 6, name: "in", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
    { no: 7, name: "not_in", kind: "scalar", T: 3 /* ScalarType.INT64 */, repeated: true },
  ],
);

/**
 * UInt32Rules describes the constraints applied to `uint32` values. These
 * rules may also be applied to the `google.protobuf.UInt32Value` Well-Known-Type.
 *
 * @generated from message buf.validate.UInt32Rules
 */
const UInt32Rules = proto3.makeMessageType(
  "buf.validate.UInt32Rules",
  () => [
    { no: 1, name: "const", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "lt", kind: "scalar", T: 13 /* ScalarType.UINT32 */, oneof: "less_than" },
    { no: 3, name: "lte", kind: "scalar", T: 13 /* ScalarType.UINT32 */, oneof: "less_than" },
    { no: 4, name: "gt", kind: "scalar", T: 13 /* ScalarType.UINT32 */, oneof: "greater_than" },
    { no: 5, name: "gte", kind: "scalar", T: 13 /* ScalarType.UINT32 */, oneof: "greater_than" },
    { no: 6, name: "in", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
    { no: 7, name: "not_in", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
  ],
);

/**
 * UInt64Rules describes the constraints applied to `uint64` values. These
 * rules may also be applied to the `google.protobuf.UInt64Value` Well-Known-Type.
 *
 * @generated from message buf.validate.UInt64Rules
 */
const UInt64Rules = proto3.makeMessageType(
  "buf.validate.UInt64Rules",
  () => [
    { no: 1, name: "const", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "lt", kind: "scalar", T: 4 /* ScalarType.UINT64 */, oneof: "less_than" },
    { no: 3, name: "lte", kind: "scalar", T: 4 /* ScalarType.UINT64 */, oneof: "less_than" },
    { no: 4, name: "gt", kind: "scalar", T: 4 /* ScalarType.UINT64 */, oneof: "greater_than" },
    { no: 5, name: "gte", kind: "scalar", T: 4 /* ScalarType.UINT64 */, oneof: "greater_than" },
    { no: 6, name: "in", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
    { no: 7, name: "not_in", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
  ],
);

/**
 * SInt32Rules describes the constraints applied to `sint32` values.
 *
 * @generated from message buf.validate.SInt32Rules
 */
const SInt32Rules = proto3.makeMessageType(
  "buf.validate.SInt32Rules",
  () => [
    { no: 1, name: "const", kind: "scalar", T: 17 /* ScalarType.SINT32 */, opt: true },
    { no: 2, name: "lt", kind: "scalar", T: 17 /* ScalarType.SINT32 */, oneof: "less_than" },
    { no: 3, name: "lte", kind: "scalar", T: 17 /* ScalarType.SINT32 */, oneof: "less_than" },
    { no: 4, name: "gt", kind: "scalar", T: 17 /* ScalarType.SINT32 */, oneof: "greater_than" },
    { no: 5, name: "gte", kind: "scalar", T: 17 /* ScalarType.SINT32 */, oneof: "greater_than" },
    { no: 6, name: "in", kind: "scalar", T: 17 /* ScalarType.SINT32 */, repeated: true },
    { no: 7, name: "not_in", kind: "scalar", T: 17 /* ScalarType.SINT32 */, repeated: true },
  ],
);

/**
 * SInt64Rules describes the constraints applied to `sint64` values.
 *
 * @generated from message buf.validate.SInt64Rules
 */
const SInt64Rules = proto3.makeMessageType(
  "buf.validate.SInt64Rules",
  () => [
    { no: 1, name: "const", kind: "scalar", T: 18 /* ScalarType.SINT64 */, opt: true },
    { no: 2, name: "lt", kind: "scalar", T: 18 /* ScalarType.SINT64 */, oneof: "less_than" },
    { no: 3, name: "lte", kind: "scalar", T: 18 /* ScalarType.SINT64 */, oneof: "less_than" },
    { no: 4, name: "gt", kind: "scalar", T: 18 /* ScalarType.SINT64 */, oneof: "greater_than" },
    { no: 5, name: "gte", kind: "scalar", T: 18 /* ScalarType.SINT64 */, oneof: "greater_than" },
    { no: 6, name: "in", kind: "scalar", T: 18 /* ScalarType.SINT64 */, repeated: true },
    { no: 7, name: "not_in", kind: "scalar", T: 18 /* ScalarType.SINT64 */, repeated: true },
  ],
);

/**
 * Fixed32Rules describes the constraints applied to `fixed32` values.
 *
 * @generated from message buf.validate.Fixed32Rules
 */
const Fixed32Rules = proto3.makeMessageType(
  "buf.validate.Fixed32Rules",
  () => [
    { no: 1, name: "const", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, opt: true },
    { no: 2, name: "lt", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, oneof: "less_than" },
    { no: 3, name: "lte", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, oneof: "less_than" },
    { no: 4, name: "gt", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, oneof: "greater_than" },
    { no: 5, name: "gte", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, oneof: "greater_than" },
    { no: 6, name: "in", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, repeated: true },
    { no: 7, name: "not_in", kind: "scalar", T: 7 /* ScalarType.FIXED32 */, repeated: true },
  ],
);

/**
 * Fixed64Rules describes the constraints applied to `fixed64` values.
 *
 * @generated from message buf.validate.Fixed64Rules
 */
const Fixed64Rules = proto3.makeMessageType(
  "buf.validate.Fixed64Rules",
  () => [
    { no: 1, name: "const", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, opt: true },
    { no: 2, name: "lt", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, oneof: "less_than" },
    { no: 3, name: "lte", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, oneof: "less_than" },
    { no: 4, name: "gt", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, oneof: "greater_than" },
    { no: 5, name: "gte", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, oneof: "greater_than" },
    { no: 6, name: "in", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, repeated: true },
    { no: 7, name: "not_in", kind: "scalar", T: 6 /* ScalarType.FIXED64 */, repeated: true },
  ],
);

/**
 * SFixed32Rules describes the constraints applied to `fixed32` values.
 *
 * @generated from message buf.validate.SFixed32Rules
 */
const SFixed32Rules = proto3.makeMessageType(
  "buf.validate.SFixed32Rules",
  () => [
    { no: 1, name: "const", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, opt: true },
    { no: 2, name: "lt", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, oneof: "less_than" },
    { no: 3, name: "lte", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, oneof: "less_than" },
    { no: 4, name: "gt", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, oneof: "greater_than" },
    { no: 5, name: "gte", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, oneof: "greater_than" },
    { no: 6, name: "in", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, repeated: true },
    { no: 7, name: "not_in", kind: "scalar", T: 15 /* ScalarType.SFIXED32 */, repeated: true },
  ],
);

/**
 * SFixed64Rules describes the constraints applied to `fixed64` values.
 *
 * @generated from message buf.validate.SFixed64Rules
 */
const SFixed64Rules = proto3.makeMessageType(
  "buf.validate.SFixed64Rules",
  () => [
    { no: 1, name: "const", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, opt: true },
    { no: 2, name: "lt", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, oneof: "less_than" },
    { no: 3, name: "lte", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, oneof: "less_than" },
    { no: 4, name: "gt", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, oneof: "greater_than" },
    { no: 5, name: "gte", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, oneof: "greater_than" },
    { no: 6, name: "in", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, repeated: true },
    { no: 7, name: "not_in", kind: "scalar", T: 16 /* ScalarType.SFIXED64 */, repeated: true },
  ],
);

/**
 * BoolRules describes the constraints applied to `bool` values. These rules
 * may also be applied to the `google.protobuf.BoolValue` Well-Known-Type.
 *
 * @generated from message buf.validate.BoolRules
 */
const BoolRules = proto3.makeMessageType(
  "buf.validate.BoolRules",
  () => [
    { no: 1, name: "const", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ],
);

/**
 * StringRules describes the constraints applied to `string` values These
 * rules may also be applied to the `google.protobuf.StringValue` Well-Known-Type.
 *
 * @generated from message buf.validate.StringRules
 */
const StringRules = proto3.makeMessageType(
  "buf.validate.StringRules",
  () => [
    { no: 1, name: "const", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 19, name: "len", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "min_len", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 3, name: "max_len", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 20, name: "len_bytes", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 4, name: "min_bytes", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 5, name: "max_bytes", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 6, name: "pattern", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "prefix", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "suffix", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "contains", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 23, name: "not_contains", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "in", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 11, name: "not_in", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 12, name: "email", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
    { no: 13, name: "hostname", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
    { no: 14, name: "ip", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
    { no: 15, name: "ipv4", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
    { no: 16, name: "ipv6", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
    { no: 17, name: "uri", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
    { no: 18, name: "uri_ref", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
    { no: 21, name: "address", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
    { no: 22, name: "uuid", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
    { no: 26, name: "ip_with_prefixlen", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
    { no: 27, name: "ipv4_with_prefixlen", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
    { no: 28, name: "ipv6_with_prefixlen", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
    { no: 29, name: "ip_prefix", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
    { no: 30, name: "ipv4_prefix", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
    { no: 31, name: "ipv6_prefix", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
    { no: 24, name: "well_known_regex", kind: "enum", T: proto3.getEnumType(KnownRegex), oneof: "well_known" },
    { no: 25, name: "strict", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ],
);

/**
 * BytesRules describe the constraints applied to `bytes` values. These rules
 * may also be applied to the `google.protobuf.BytesValue` Well-Known-Type.
 *
 * @generated from message buf.validate.BytesRules
 */
const BytesRules = proto3.makeMessageType(
  "buf.validate.BytesRules",
  () => [
    { no: 1, name: "const", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 13, name: "len", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "min_len", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 3, name: "max_len", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 4, name: "pattern", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "prefix", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 6, name: "suffix", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 7, name: "contains", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 8, name: "in", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
    { no: 9, name: "not_in", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
    { no: 10, name: "ip", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
    { no: 11, name: "ipv4", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
    { no: 12, name: "ipv6", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "well_known" },
  ],
);

/**
 * EnumRules describe the constraints applied to `enum` values.
 *
 * @generated from message buf.validate.EnumRules
 */
const EnumRules = proto3.makeMessageType(
  "buf.validate.EnumRules",
  () => [
    { no: 1, name: "const", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 2, name: "defined_only", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 3, name: "in", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 4, name: "not_in", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
  ],
);

/**
 * RepeatedRules describe the constraints applied to `repeated` values.
 *
 * @generated from message buf.validate.RepeatedRules
 */
const RepeatedRules = proto3.makeMessageType(
  "buf.validate.RepeatedRules",
  () => [
    { no: 1, name: "min_items", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "max_items", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 3, name: "unique", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "items", kind: "message", T: FieldConstraints, opt: true },
  ],
);

/**
 * MapRules describe the constraints applied to `map` values.
 *
 * @generated from message buf.validate.MapRules
 */
const MapRules = proto3.makeMessageType(
  "buf.validate.MapRules",
  () => [
    { no: 1, name: "min_pairs", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "max_pairs", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 4, name: "keys", kind: "message", T: FieldConstraints, opt: true },
    { no: 5, name: "values", kind: "message", T: FieldConstraints, opt: true },
  ],
);

/**
 * AnyRules describe constraints applied exclusively to the `google.protobuf.Any` well-known type.
 *
 * @generated from message buf.validate.AnyRules
 */
const AnyRules = proto3.makeMessageType(
  "buf.validate.AnyRules",
  () => [
    { no: 2, name: "in", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "not_in", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * DurationRules describe the constraints applied exclusively to the `google.protobuf.Duration` well-known type.
 *
 * @generated from message buf.validate.DurationRules
 */
const DurationRules = proto3.makeMessageType(
  "buf.validate.DurationRules",
  () => [
    { no: 2, name: "const", kind: "message", T: Duration, opt: true },
    { no: 3, name: "lt", kind: "message", T: Duration, oneof: "less_than" },
    { no: 4, name: "lte", kind: "message", T: Duration, oneof: "less_than" },
    { no: 5, name: "gt", kind: "message", T: Duration, oneof: "greater_than" },
    { no: 6, name: "gte", kind: "message", T: Duration, oneof: "greater_than" },
    { no: 7, name: "in", kind: "message", T: Duration, repeated: true },
    { no: 8, name: "not_in", kind: "message", T: Duration, repeated: true },
  ],
);

/**
 * TimestampRules describe the constraints applied exclusively to the `google.protobuf.Timestamp` well-known type.
 *
 * @generated from message buf.validate.TimestampRules
 */
const TimestampRules = proto3.makeMessageType(
  "buf.validate.TimestampRules",
  () => [
    { no: 2, name: "const", kind: "message", T: Timestamp, opt: true },
    { no: 3, name: "lt", kind: "message", T: Timestamp, oneof: "less_than" },
    { no: 4, name: "lte", kind: "message", T: Timestamp, oneof: "less_than" },
    { no: 7, name: "lt_now", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "less_than" },
    { no: 5, name: "gt", kind: "message", T: Timestamp, oneof: "greater_than" },
    { no: 6, name: "gte", kind: "message", T: Timestamp, oneof: "greater_than" },
    { no: 8, name: "gt_now", kind: "scalar", T: 8 /* ScalarType.BOOL */, oneof: "greater_than" },
    { no: 9, name: "within", kind: "message", T: Duration, opt: true },
  ],
);


exports.KnownRegex = KnownRegex;
exports.MessageConstraints = MessageConstraints;
exports.OneofConstraints = OneofConstraints;
exports.FieldConstraints = FieldConstraints;
exports.FloatRules = FloatRules;
exports.DoubleRules = DoubleRules;
exports.Int32Rules = Int32Rules;
exports.Int64Rules = Int64Rules;
exports.UInt32Rules = UInt32Rules;
exports.UInt64Rules = UInt64Rules;
exports.SInt32Rules = SInt32Rules;
exports.SInt64Rules = SInt64Rules;
exports.Fixed32Rules = Fixed32Rules;
exports.Fixed64Rules = Fixed64Rules;
exports.SFixed32Rules = SFixed32Rules;
exports.SFixed64Rules = SFixed64Rules;
exports.BoolRules = BoolRules;
exports.StringRules = StringRules;
exports.BytesRules = BytesRules;
exports.EnumRules = EnumRules;
exports.RepeatedRules = RepeatedRules;
exports.MapRules = MapRules;
exports.AnyRules = AnyRules;
exports.DurationRules = DurationRules;
exports.TimestampRules = TimestampRules;
